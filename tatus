[33mcommit df647ba43ea81fccc300596ed5d5b4fbd83303e4[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32msprint_6[m[33m, [m[1;31morigin/sprint_6[m[33m)[m
Author: Artur Pagaev <paagaev@mail.ru>
Date:   Mon Jun 2 18:42:57 2025 +0700

    –î–æ–±–∞–≤–∏–ª target/ –≤ .gitignore –∏ —É–±—Ä–∞–ª –∏–∑ –∏–Ω–¥–µ–∫—Å–∞

[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex a2b953a..92087c7 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -1,61 +1,71 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project xmlns="http://maven.apache.org/POM/4.0.0"[m
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0[m
[32m+[m[32m                             http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
 [m
[31m-<modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
 [m
[31m-<groupId>org.example</groupId>[m
[31m-<artifactId>qa_java</artifactId>[m
[31m-<version>1.0-SNAPSHOT</version>[m
[32m+[m[32m  <groupId>org.example</groupId>[m
[32m+[m[32m  <artifactId>qa_java</artifactId>[m
[32m+[m[32m  <version>1.0-SNAPSHOT</version>[m
 [m
[31m-<properties>[m
[31m-  <maven.compiler.source>11</maven.compiler.source>[m
[31m-  <maven.compiler.target>11</maven.compiler.target>[m
[31m-</properties>[m
[32m+[m[32m  <properties>[m
[32m+[m[32m    <maven.compiler.source>11</maven.compiler.source>[m
[32m+[m[32m    <maven.compiler.target>11</maven.compiler.target>[m
[32m+[m[32m    <!-- –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏ -->[m
[32m+[m[32m    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>[m
[32m+[m[32m    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>[m
[32m+[m[32m  </properties>[m
 [m
[31m-<dependencies>[m
[31m-  <dependency>[m
[31m-    <groupId>org.junit.jupiter</groupId>[m
[31m-    <artifactId>junit-jupiter</artifactId>[m
[31m-    <version>5.9.1</version>[m
[31m-    <scope>test</scope>[m
[31m-  </dependency>[m
[31m-  <dependency>[m
[31m-    <groupId>org.mockito</groupId>[m
[31m-    <artifactId>mockito-core</artifactId>[m
[31m-    <version>4.8.0</version>[m
[31m-    <scope>test</scope>[m
[31m-  </dependency>[m
[31m-</dependencies>[m
[32m+[m[32m  <dependencies>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.junit.jupiter</groupId>[m
[32m+[m[32m      <artifactId>junit-jupiter</artifactId>[m
[32m+[m[32m      <version>5.9.1</version>[m
[32m+[m[32m      <scope>test</scope>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.mockito</groupId>[m
[32m+[m[32m      <artifactId>mockito-core</artifactId>[m
[32m+[m[32m      <version>4.8.0</version>[m
[32m+[m[32m      <scope>test</scope>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m  </dependencies>[m
 [m
[31m-<build>[m
[31m-  <plugins>[m
[31m-    <plugin>[m
[31m-      <groupId>org.apache.maven.plugins</groupId>[m
[31m-      <artifactId>maven-surefire-plugin</artifactId>[m
[31m-      <version>2.22.2</version>[m
[31m-    </plugin>[m
[31m-    <plugin>[m
[31m-      <groupId>org.jacoco</groupId>[m
[31m-      <artifactId>jacoco-maven-plugin</artifactId>[m
[31m-      <version>0.8.7</version>[m
[31m-      <executions>[m
[31m-        <execution>[m
[31m-          <goals>[m
[31m-            <goal>prepare-agent</goal>[m
[31m-          </goals>[m
[31m-        </execution>[m
[31m-        <execution>[m
[31m-          <id>report</id>[m
[31m-          <phase>verify</phase>[m
[31m-          <goals>[m
[31m-            <goal>report</goal>[m
[31m-          </goals>[m
[31m-        </execution>[m
[31m-      </executions>[m
[31m-    </plugin>[m
[31m-  </plugins>[m
[31m-</build>[m
[32m+[m[32m  <build>[m
[32m+[m[32m    <plugins>[m
[32m+[m[32m      <plugin>[m
[32m+[m[32m        <groupId>org.apache.maven.plugins</groupId>[m
[32m+[m[32m        <artifactId>maven-surefire-plugin</artifactId>[m
[32m+[m[32m        <version>2.22.2</version>[m
[32m+[m[32m        <configuration>[m
[32m+[m[32m          <encoding>UTF-8</encoding>[m
[32m+[m[32m          <useSystemClassLoader>true</useSystemClassLoader>[m
[32m+[m[32m        </configuration>[m
[32m+[m[32m      </plugin>[m
[32m+[m
[32m+[m[32m      <plugin>[m
[32m+[m[32m        <groupId>org.jacoco</groupId>[m
[32m+[m[32m        <artifactId>jacoco-maven-plugin</artifactId>[m
[32m+[m[32m        <version>0.8.7</version>[m
[32m+[m[32m        <executions>[m
[32m+[m[32m          <execution>[m
[32m+[m[32m            <id>prepare-agent</id>[m
[32m+[m[32m            <goals>[m
[32m+[m[32m              <goal>prepare-agent</goal>[m
[32m+[m[32m            </goals>[m
[32m+[m[32m          </execution>[m
[32m+[m[32m          <execution>[m
[32m+[m[32m            <id>report</id>[m
[32m+[m[32m            <phase>verify</phase>[m
[32m+[m[32m            <goals>[m
[32m+[m[32m              <goal>report</goal>[m
[32m+[m[32m            </goals>[m
[32m+[m[32m          </execution>[m
[32m+[m[32m        </executions>[m
[32m+[m[32m      </plugin>[m
[32m+[m[32m    </plugins>[m
[32m+[m[32m  </build>[m
 [m
 </project>[m
[1mdiff --git a/src/test/java/animals/CatTest.java b/src/test/java/animals/CatTest.java[m
[1mindex 97b703a..33a50b9 100644[m
[1m--- a/src/test/java/animals/CatTest.java[m
[1m+++ b/src/test/java/animals/CatTest.java[m
[36m@@ -1,19 +1,20 @@[m
 package animals;[m
[31m-import org.junit.jupiter.api.Test;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.params.ParameterizedTest;[m
[32m+[m[32mimport org.junit.jupiter.params.provider.ValueSource;[m
[32m+[m
 import static org.junit.jupiter.api.Assertions.assertEquals;[m
 import static org.mockito.Mockito.*;[m
[32m+[m
 public class CatTest {[m
[31m-    @Test[m
[31m-    void getSoundReturnsMeow() {[m
[32m+[m
[32m+[m[32m    @ParameterizedTest[m
[32m+[m[32m    @ValueSource(ints = {0, 1, 2, 5})[m
[32m+[m[32m    void getKittensReturnsExpectedCount(int kittensCount) {[m
         Feline feline = mock(Feline.class);[m
[32m+[m[32m        when(feline.getKittens()).thenReturn(kittensCount);[m
         Cat cat = new Cat(feline);[m
[31m-        assertEquals("–ú—è—É", cat.getSound());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void getKittensDelegatesToFeline() {[m
[31m-        Feline feline = mock(Feline.class);[m
[31m-        when(feline.getKittens()).thenReturn(2);[m
[31m-        Cat cat = new Cat(feline);[m
[31m-        assertEquals(2, cat.getKittens());[m
[32m+[m
[32m+[m[32m        assertEquals(kittensCount, cat.getKittens());[m
     }[m
 }[m
[1mdiff --git a/src/test/java/animals/FelineTest.java b/src/test/java/animals/FelineTest.java[m
[1mindex 488ecc2..fbaf4a6 100644[m
[1m--- a/src/test/java/animals/FelineTest.java[m
[1m+++ b/src/test/java/animals/FelineTest.java[m
[36m@@ -1,21 +1,16 @@[m
 package animals;[m
[31m-import org.junit.jupiter.api.Test;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.params.ParameterizedTest;[m
[32m+[m[32mimport org.junit.jupiter.params.provider.ValueSource;[m
[32m+[m
 import static org.junit.jupiter.api.Assertions.assertEquals;[m
[31m-import java.util.List;[m
[32m+[m
 public class FelineTest {[m
[31m-    @Test[m
[31m-    void eatMeatReturnsList() {[m
[32m+[m
[32m+[m[32m    @ParameterizedTest[m
[32m+[m[32m    @ValueSource(ints = {1, 3, 5, 10})[m
[32m+[m[32m    void getKittensWithParamReturnsCorrect(int kittensCount) {[m
         Feline feline = new Feline();[m
[31m-        assertEquals(List.of("–ñ–∏–≤–æ—Ç–Ω—ã–µ", "–ü—Ç–∏—Ü—ã", "–†—ã–±–∞"), feline.eatMeat());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void getKittensDefaultReturnsOne() {[m
[31m-        Feline feline = new Feline();[m
[31m-        assertEquals(1, feline.getKittens());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void getKittensWithParamReturnsCorrect() {[m
[31m-        Feline feline = new Feline();[m
[31m-        assertEquals(5, feline.getKittens(5));[m
[32m+[m[32m        assertEquals(kittensCount, feline.getKittens(kittensCount));[m
     }[m
 }[m
[1mdiff --git a/src/test/java/animals/LionAlexTest.java b/src/test/java/animals/LionAlexTest.java[m
[1mindex 38c6e7f..7694590 100644[m
[1m--- a/src/test/java/animals/LionAlexTest.java[m
[1m+++ b/src/test/java/animals/LionAlexTest.java[m
[36m@@ -1,21 +1,24 @@[m
 package animals;[m
[31m-import org.junit.jupiter.api.Test;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.params.ParameterizedTest;[m
[32m+[m[32mimport org.junit.jupiter.params.provider.MethodSource;[m
 import java.util.List;[m
[32m+[m[32mimport java.util.stream.Stream;[m
 import static org.junit.jupiter.api.Assertions.assertEquals;[m
[32m+[m
 public class LionAlexTest {[m
[31m-    @Test[m
[31m-    void alexHasNoKittens() throws Exception {[m
[31m-        LionAlex alex = new LionAlex(new Feline());[m
[31m-        assertEquals(0, alex.getKittens());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void alexHasFriends() throws Exception {[m
[31m-        LionAlex alex = new LionAlex(new Feline());[m
[31m-        assertEquals(List.of("–ú–∞—Ä—Ç–∏", "–ì–ª–æ—Ä–∏—è", "–ú–µ–ª–º–∞–Ω"), alex.getFriends());[m
[32m+[m
[32m+[m[32m    static Stream<List<String>> friendsProvider() {[m
[32m+[m[32m        return Stream.of([m
[32m+[m[32m            List.of("–ú–∞—Ä—Ç–∏", "–ì–ª–æ—Ä–∏—è", "–ú–µ–ª–º–∞–Ω"),[m
[32m+[m[32m            List.of("–ú–∞—Ä—Ç–∏", "–ì–ª–æ—Ä–∏—è", "–ú–µ–ª–º–∞–Ω")  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏[m
[32m+[m[32m        );[m
     }[m
[31m-    @Test[m
[31m-    void alexLivesInZoo() throws Exception {[m
[32m+[m
[32m+[m[32m    @ParameterizedTest[m
[32m+[m[32m    @MethodSource("friendsProvider")[m
[32m+[m[32m    void alexHasFriends(List<String> expectedFriends) throws Exception {[m
         LionAlex alex = new LionAlex(new Feline());[m
[31m-        assertEquals("–ù—å—é-–ô–æ—Ä–∫—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫", alex.getPlaceOfLiving());[m
[32m+[m[32m        assertEquals(expectedFriends, alex.getFriends());[m
     }[m
 }[m
[1mdiff --git a/src/test/java/animals/LionTest.java b/src/test/java/animals/LionTest.java[m
[1mindex a58c3fa..8248e2b 100644[m
[1m--- a/src/test/java/animals/LionTest.java[m
[1m+++ b/src/test/java/animals/LionTest.java[m
[36m@@ -1,20 +1,23 @@[m
 package animals;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.params.ParameterizedTest;[m
[32m+[m[32mimport org.junit.jupiter.params.provider.CsvSource;[m
 import org.junit.jupiter.api.Test;[m
[31m-import org.mockito.Mockito;[m
[31m-import java.util.List;[m
 import static org.junit.jupiter.api.Assertions.*;[m
 import static org.mockito.Mockito.*;[m
[32m+[m
 public class LionTest {[m
[31m-    @Test[m
[31m-    void lionHasManeIfMale() throws Exception {[m
[31m-        Lion lion = new Lion("Male", new Feline());[m
[31m-        assertTrue(lion.doesHaveMane());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void lionHasNoManeIfFemale() throws Exception {[m
[31m-        Lion lion = new Lion("Female", new Feline());[m
[31m-        assertFalse(lion.doesHaveMane());[m
[32m+[m
[32m+[m[32m    @ParameterizedTest[m
[32m+[m[32m    @CsvSource({[m
[32m+[m[32m        "Male, true",[m
[32m+[m[32m        "Female, false"[m
[32m+[m[32m    })[m
[32m+[m[32m    void lionManeDependsOnSex(String sex, boolean expectedHasMane) throws Exception {[m
[32m+[m[32m        Lion lion = new Lion(sex, new Feline());[m
[32m+[m[32m        assertEquals(expectedHasMane, lion.doesHaveMane());[m
     }[m
[32m+[m
     @Test[m
     void lionThrowsOnInvalidSex() {[m
         Exception exception = assertThrows(Exception.class, () -> {[m
[36m@@ -22,6 +25,7 @@[m [mpublic class LionTest {[m
         });[m
         assertEquals("Unknown sex", exception.getMessage());[m
     }[m
[32m+[m
     @Test[m
     void lionDelegatesToFeline() throws Exception {[m
         Feline feline = mock(Feline.class);[m
[1mdiff --git a/target/site/jacoco/animals/Cat.html b/target/site/jacoco/animals/Cat.html[m
[1mdeleted file mode 100644[m
[1mindex c83315a..0000000[m
[1m--- a/target/site/jacoco/animals/Cat.html[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="ru"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Cat</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">qa_java</a> &gt; <a href="index.html" class="el_package">animals</a> &gt; <span class="el_class">Cat</span></div><h1>Cat</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">0 of 12</td><td class="ctr2">100¬†%</td><td class="bar">0 of 0</td><td class="ctr2">n/a</td><td class="ctr1">0</td><td class="ctr2">3</td><td class="ctr1">0</td><td class="ctr2">5</td><td class="ctr1">0</td><td class="ctr2">3</td></tr></tfoot><tbody><tr><td id="a0"><a href="Cat.java.html#L4" class="el_method">Cat(Feline)</a></td><td class="bar" id="b0"><img src="../jacoco-resources/greenbar.gif" width="120" height="10" title="6" alt="6"/></td><td class="ctr2" id="c0">100¬†%</td><td class="bar" id="d0"/><td class="ctr2" id="e0">n/a</td><td class="ctr1" id="f0">0</td><td class="ctr2" id="g0">1</td><td class="ctr1" id="h0">0</td><td class="ctr2" id="i0">3</td><td class="ctr1" id="j0">0</td><td class="ctr2" id="k0">1</td></tr><tr><td id="a1"><a href="Cat.java.html#L11" class="el_method">getKittens()</a></td><td class="bar" id="b1"><img src="../jacoco-resources/greenbar.gif" width="80" height="10" title="4" alt="4"/></td><td class="ctr2" id="c1">100¬†%</td><td class="bar" id="d1"/><td class="ctr2" id="e1">n/a</td><td class="ctr1" id="f1">0</td><td class="ctr2" id="g1">1</td><td class="ctr1" id="h1">0</td><td class="ctr2" id="i1">1</td><td class="ctr1" id="j1">0</td><td class="ctr2" id="k1">1</td></tr><tr><td id="a2"><a href="Cat.java.html#L8" class="el_method">getSound()</a></td><td class="bar" id="b2"><img src="../jacoco-resources/greenbar.gif" width="40" height="10" title="2" alt="2"/></td><td class="ctr2" id="c2">100¬†%</td><td class="bar" id="d2"/><td class="ctr2" id="e2">n/a</td><td class="ctr1" id="f2">0</td><td class="ctr2" id="g2">1</td><td class="ctr1" id="h2">0</td><td class="ctr2" id="i2">1</td><td class="ctr1" id="j2">0</td><td class="ctr2" id="k2">1</td></tr></tbody></table><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>[m
\ No newline at end of file[m
[1mdiff --git a/target/site/jacoco/animals/Cat.java.html b/target/site/jacoco/animals/Cat.java.html[m
[1mdeleted file mode 100644[m
[1mindex 146f153..0000000[m
[1m--- a/target/site/jacoco/animals/Cat.java.html[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="ru"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Cat.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">qa_java</a> &gt; <a href="index.source.html" class="el_package">animals</a> &gt; <span class="el_source">Cat.java</span></div><h1>Cat.java</h1><pre class="source lang-java linenums">package animals;[m
[31m-public class Cat {[m
[31m-    private final Feline feline;[m
[31m-<span class="fc" id="L4">    public Cat(Feline feline) {</span>[m
[31m-<span class="fc" id="L5">        this.feline = feline;</span>[m
[31m-<span class="fc" id="L6">    }</span>[m
[31m-    public String getSound() {[m
[31m-<span class="fc" id="L8">        return &quot;–ú—è—É&quot;;</span>[m
[31m-    }[m
[31m-    public int getKittens() {[m
[31m-<span class="fc" id="L11">        return feline.getKittens();</span>[m
[31m-    }[m
[31m-}[m
[31m-</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span></div></body></html>[m
\ No newline at end of file[m
[1mdiff --git a/target/site/jacoco/animals/Feline.html b/target/site/jacoco/animals/Feline.html[m
[1mdeleted file mode 100644[m
[1mindex f92eb38..0000000[m
[1m--- a/target/site/jacoco/animals/Feline.html[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="ru"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Feline</title><script type="text/javascript" src="../jacoco-resources/sort.js"></script></head><body onload="initialSort(['breadcrumb'])"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">qa_java</a> &gt; <a href="index.html" class="el_package">animals</a> &gt; <span class="el_class">Feline</span></div><h1>Feline</h1><table class="coverage" cellspacing="0" id="coveragetable"><thead><tr><td class="sortable" id="a" onclick="toggleSort(this)">Element</td><td class="down sortable bar" id="b" onclick="toggleSort(this)">Missed Instructions</td><td class="sortable ctr2" id="c" onclick="toggleSort(this)">Cov.</td><td class="sortable bar" id="d" onclick="toggleSort(this)">Missed Branches</td><td class="sortable ctr2" id="e" onclick="toggleSort(this)">Cov.</td><td class="sortable ctr1" id="f" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="g" onclick="toggleSort(this)">Cxty</td><td class="sortable ctr1" id="h" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="i" onclick="toggleSort(this)">Lines</td><td class="sortable ctr1" id="j" onclick="toggleSort(this)">Missed</td><td class="sortable ctr2" id="k" onclick="toggleSort(this)">Methods</td></tr></thead><tfoot><tr><td>Total</td><td class="bar">0 of 14</td><td class="ctr2